{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPA7sqohl8s7s2ldfvGKqsh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T1CcEqnxtHaV","executionInfo":{"status":"ok","timestamp":1731173633539,"user_tz":-330,"elapsed":886,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"0c540452-11e5-4ce9-80bd-d98b31544729"},"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset successfully Imported of Shape : (67415, 15)\n"]}],"source":["# Importing Necessary Libraries\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","#Importing dataset\n","ipl_df = pd.read_csv('/content/ipl_data (1).csv')\n","print(f\"Dataset successfully Imported of Shape : {ipl_df.shape}\")"]},{"cell_type":"code","source":["# First 5 Columns Data\n","ipl_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"BJaxoOP1_dAc","executionInfo":{"status":"ok","timestamp":1731173671487,"user_tz":-330,"elapsed":482,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"72aaea55-3101-4fb7-e294-6b1ea964bab7"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mid        date                  venue               bat_team  \\\n","0    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n","1    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n","2    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n","3    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n","4    1  2008-04-18  M Chinnaswamy Stadium  Kolkata Knight Riders   \n","\n","                     bowl_team      batsman   bowler  runs  wickets  overs  \\\n","0  Royal Challengers Bangalore   SC Ganguly  P Kumar   1.0      0.0    0.1   \n","1  Royal Challengers Bangalore  BB McCullum  P Kumar   1.0      0.0    0.2   \n","2  Royal Challengers Bangalore  BB McCullum  P Kumar   2.0      0.0    0.2   \n","3  Royal Challengers Bangalore  BB McCullum  P Kumar   2.0      0.0    0.3   \n","4  Royal Challengers Bangalore  BB McCullum  P Kumar   2.0      0.0    0.4   \n","\n","   runs_last_5  wickets_last_5  striker  non-striker  total  \n","0          1.0             0.0      0.0          0.0  222.0  \n","1          1.0             0.0      0.0          0.0  222.0  \n","2          2.0             0.0      0.0          0.0  222.0  \n","3          2.0             0.0      0.0          0.0  222.0  \n","4          2.0             0.0      0.0          0.0  222.0  "],"text/html":["\n","  <div id=\"df-2ddf0f4d-3723-4374-bd17-db1f3240a5c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mid</th>\n","      <th>date</th>\n","      <th>venue</th>\n","      <th>bat_team</th>\n","      <th>bowl_team</th>\n","      <th>batsman</th>\n","      <th>bowler</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>striker</th>\n","      <th>non-striker</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2008-04-18</td>\n","      <td>M Chinnaswamy Stadium</td>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>SC Ganguly</td>\n","      <td>P Kumar</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2008-04-18</td>\n","      <td>M Chinnaswamy Stadium</td>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>BB McCullum</td>\n","      <td>P Kumar</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2008-04-18</td>\n","      <td>M Chinnaswamy Stadium</td>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>BB McCullum</td>\n","      <td>P Kumar</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2008-04-18</td>\n","      <td>M Chinnaswamy Stadium</td>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>BB McCullum</td>\n","      <td>P Kumar</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2008-04-18</td>\n","      <td>M Chinnaswamy Stadium</td>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>BB McCullum</td>\n","      <td>P Kumar</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ddf0f4d-3723-4374-bd17-db1f3240a5c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ddf0f4d-3723-4374-bd17-db1f3240a5c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ddf0f4d-3723-4374-bd17-db1f3240a5c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-54448daa-a645-4102-8678-5973b33bad80\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54448daa-a645-4102-8678-5973b33bad80')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-54448daa-a645-4102-8678-5973b33bad80 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ipl_df","summary":"{\n  \"name\": \"ipl_df\",\n  \"rows\": 67415,\n  \"fields\": [\n    {\n      \"column\": \"mid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 157,\n        \"min\": 1,\n        \"max\": 548,\n        \"num_unique_values\": 548,\n        \"samples\": [\n          248,\n          79,\n          246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 392,\n        \"samples\": [\n          \"2009-05-24\",\n          \"2014-04-18\",\n          \"2013-04-27\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"venue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"De Beers Diamond Oval\",\n          \"Barabati Stadium\",\n          \"JSCA International Stadium Complex\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Rising Pune Supergiants\",\n          \"Pune Warriors\",\n          \"Kolkata Knight Riders\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Rising Pune Supergiants\",\n          \"Kochi Tuskers Kerala\",\n          \"Royal Challengers Bangalore\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"batsman\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 382,\n        \"samples\": [\n          \"RJ Peterson\",\n          \"NL McCullum\",\n          \"B Sumanth\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowler\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 306,\n        \"samples\": [\n          \"S Aravind\",\n          \"SB Wagh\",\n          \"JP Duminy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48.55125490448061,\n        \"min\": 0.0,\n        \"max\": 263.0,\n        \"num_unique_values\": 252,\n        \"samples\": [\n          106.0,\n          21.0,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.00782542385316,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5.0,\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.773211506848342,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.929492337354565,\n        \"min\": 0.0,\n        \"max\": 113.0,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          37.0,\n          18.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0497255129481544,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          5.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.145820877658583,\n        \"min\": 0.0,\n        \"max\": 175.0,\n        \"num_unique_values\": 154,\n        \"samples\": [\n          45.0,\n          34.0,\n          133.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"non-striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.87480120376461,\n        \"min\": 0.0,\n        \"max\": 109.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          69.0,\n          0.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.235830626252856,\n        \"min\": 67.0,\n        \"max\": 263.0,\n        \"num_unique_values\": 134,\n        \"samples\": [\n          113.0,\n          170.0,\n          193.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Describing the ipl_dfset\n","ipl_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"HLsS-CRj_jZ1","executionInfo":{"status":"ok","timestamp":1731173754526,"user_tz":-330,"elapsed":454,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"6b3902f1-65ce-4044-8c85-98c1cc86ac21"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                mid          runs       wickets         overs   runs_last_5  \\\n","count  67415.000000  67414.000000  67414.000000  67414.000000  67414.000000   \n","mean     273.692754     74.302326      2.408758      9.775499     33.015338   \n","std      157.950190     48.551255      2.007825      5.773212     14.929492   \n","min        1.000000      0.000000      0.000000      0.000000      0.000000   \n","25%      137.000000     34.000000      1.000000      4.600000     24.000000   \n","50%      273.000000     70.000000      2.000000      9.600000     34.000000   \n","75%      411.000000    110.000000      4.000000     14.600000     43.000000   \n","max      548.000000    263.000000     10.000000     19.600000    113.000000   \n","\n","       wickets_last_5       striker   non-striker         total  \n","count    67414.000000  67414.000000  67414.000000  67414.000000  \n","mean         1.112751     24.873157      8.901890    160.111550  \n","std          1.049726     20.145821     10.874801     29.235831  \n","min          0.000000      0.000000      0.000000     67.000000  \n","25%          0.000000     10.000000      1.000000    141.000000  \n","50%          1.000000     20.000000      5.000000    161.000000  \n","75%          2.000000     35.000000     13.000000    181.000000  \n","max          7.000000    175.000000    109.000000    263.000000  "],"text/html":["\n","  <div id=\"df-eb12b9a4-91a8-4222-9abe-563f2ec189d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mid</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>striker</th>\n","      <th>non-striker</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>67415.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","      <td>67414.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>273.692754</td>\n","      <td>74.302326</td>\n","      <td>2.408758</td>\n","      <td>9.775499</td>\n","      <td>33.015338</td>\n","      <td>1.112751</td>\n","      <td>24.873157</td>\n","      <td>8.901890</td>\n","      <td>160.111550</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>157.950190</td>\n","      <td>48.551255</td>\n","      <td>2.007825</td>\n","      <td>5.773212</td>\n","      <td>14.929492</td>\n","      <td>1.049726</td>\n","      <td>20.145821</td>\n","      <td>10.874801</td>\n","      <td>29.235831</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>67.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>137.000000</td>\n","      <td>34.000000</td>\n","      <td>1.000000</td>\n","      <td>4.600000</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","      <td>10.000000</td>\n","      <td>1.000000</td>\n","      <td>141.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>273.000000</td>\n","      <td>70.000000</td>\n","      <td>2.000000</td>\n","      <td>9.600000</td>\n","      <td>34.000000</td>\n","      <td>1.000000</td>\n","      <td>20.000000</td>\n","      <td>5.000000</td>\n","      <td>161.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>411.000000</td>\n","      <td>110.000000</td>\n","      <td>4.000000</td>\n","      <td>14.600000</td>\n","      <td>43.000000</td>\n","      <td>2.000000</td>\n","      <td>35.000000</td>\n","      <td>13.000000</td>\n","      <td>181.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>548.000000</td>\n","      <td>263.000000</td>\n","      <td>10.000000</td>\n","      <td>19.600000</td>\n","      <td>113.000000</td>\n","      <td>7.000000</td>\n","      <td>175.000000</td>\n","      <td>109.000000</td>\n","      <td>263.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb12b9a4-91a8-4222-9abe-563f2ec189d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb12b9a4-91a8-4222-9abe-563f2ec189d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb12b9a4-91a8-4222-9abe-563f2ec189d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca99ee9e-da39-4449-a4ee-532530585fe4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca99ee9e-da39-4449-a4ee-532530585fe4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca99ee9e-da39-4449-a4ee-532530585fe4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"ipl_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"mid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23744.402791373937,\n        \"min\": 1.0,\n        \"max\": 67415.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          273.6927538381666,\n          273.0,\n          67415.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23804.282520455534,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          74.30232592636544,\n          70.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23833.366768383297,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.4087578247841694,\n          2.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23831.21914109283,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.775499154478297,\n          9.6,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23821.241632256373,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.01533806034355,\n          34.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23833.83408113791,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          67414.0,\n          1.1127510606105557,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23820.11792044897,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          24.873156911027383,\n          20.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"non-striker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23827.01186468553,\n        \"min\": 0.0,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.901889815171923,\n          5.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23783.927747946607,\n        \"min\": 29.235830626252856,\n        \"max\": 67414.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          160.11154952977125,\n          161.0,\n          67414.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Information about Each Column\n","ipl_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u65mEC6j_jjx","executionInfo":{"status":"ok","timestamp":1731173821064,"user_tz":-330,"elapsed":453,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"2be9fe97-eef3-4add-9f16-edbc554325f4"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 67415 entries, 0 to 67414\n","Data columns (total 15 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   mid             67415 non-null  int64  \n"," 1   date            67415 non-null  object \n"," 2   venue           67414 non-null  object \n"," 3   bat_team        67414 non-null  object \n"," 4   bowl_team       67414 non-null  object \n"," 5   batsman         67414 non-null  object \n"," 6   bowler          67414 non-null  object \n"," 7   runs            67414 non-null  float64\n"," 8   wickets         67414 non-null  float64\n"," 9   overs           67414 non-null  float64\n"," 10  runs_last_5     67414 non-null  float64\n"," 11  wickets_last_5  67414 non-null  float64\n"," 12  striker         67414 non-null  float64\n"," 13  non-striker     67414 non-null  float64\n"," 14  total           67414 non-null  float64\n","dtypes: float64(8), int64(1), object(6)\n","memory usage: 7.7+ MB\n"]}]},{"cell_type":"code","source":["# Number of Unique Values in each column\n","ipl_df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"7huiYxAhADPC","executionInfo":{"status":"ok","timestamp":1731174043306,"user_tz":-330,"elapsed":463,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"595ee1a2-53dd-4434-cd8f-f6452d6e7efa"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mid               548\n","date              392\n","venue              34\n","bat_team           13\n","bowl_team          13\n","batsman           382\n","bowler            306\n","runs              252\n","wickets            11\n","overs             140\n","runs_last_5       102\n","wickets_last_5      8\n","striker           154\n","non-striker        88\n","total             134\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>mid</th>\n","      <td>548</td>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <td>392</td>\n","    </tr>\n","    <tr>\n","      <th>venue</th>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>bat_team</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>bowl_team</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>batsman</th>\n","      <td>382</td>\n","    </tr>\n","    <tr>\n","      <th>bowler</th>\n","      <td>306</td>\n","    </tr>\n","    <tr>\n","      <th>runs</th>\n","      <td>252</td>\n","    </tr>\n","    <tr>\n","      <th>wickets</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>overs</th>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>runs_last_5</th>\n","      <td>102</td>\n","    </tr>\n","    <tr>\n","      <th>wickets_last_5</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>striker</th>\n","      <td>154</td>\n","    </tr>\n","    <tr>\n","      <th>non-striker</th>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>total</th>\n","      <td>134</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# ipl_df types of all Columns\n","ipl_df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"siT_w5FZADRX","executionInfo":{"status":"ok","timestamp":1731174047693,"user_tz":-330,"elapsed":468,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"7854bc80-95c1-45dd-b41d-cc8a7afd1910"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mid                 int64\n","date               object\n","venue              object\n","bat_team           object\n","bowl_team          object\n","batsman            object\n","bowler             object\n","runs              float64\n","wickets           float64\n","overs             float64\n","runs_last_5       float64\n","wickets_last_5    float64\n","striker           float64\n","non-striker       float64\n","total             float64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>mid</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>venue</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>bat_team</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>bowl_team</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>batsman</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>bowler</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>runs</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>wickets</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>overs</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>runs_last_5</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>wickets_last_5</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>striker</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>non-striker</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>total</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#Wickets Distribution\n","sns.displot(ipl_df['wickets'],kde=False,bins=10)\n","plt.title(\"Wickets Distribution\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"zDMyHmYyADTe","executionInfo":{"status":"ok","timestamp":1731174066675,"user_tz":-330,"elapsed":1243,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"93324e61-0ee1-4194-c910-3c43997e4cd4"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Runs Distribution\n","sns.displot(ipl_df['total'],kde=False,bins=10)\n","plt.title(\"Runs Distribution\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"7K1Zn-1-ADXF","executionInfo":{"status":"ok","timestamp":1731174151923,"user_tz":-330,"elapsed":537,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"dc31ac4e-3bab-4727-e65a-a232cee0aa37"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Names of all columns\n","ipl_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TjmNjNB0BTii","executionInfo":{"status":"ok","timestamp":1731174268237,"user_tz":-330,"elapsed":429,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"be276ba9-e2f9-44ea-dab5-42c36796f683"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['mid', 'date', 'venue', 'bat_team', 'bowl_team', 'batsman', 'bowler',\n","       'runs', 'wickets', 'overs', 'runs_last_5', 'wickets_last_5', 'striker',\n","       'non-striker', 'total'],\n","      dtype='object')"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["irrelevant = ['mid', 'date', 'venue','batsman', 'bowler', 'striker', 'non-striker']\n","print(f'Before Removing Irrelevant Columns : {ipl_df.shape}')\n","ipl_df = ipl_df.drop(irrelevant, axis=1) # Drop Irrelevant Columns\n","print(f'After Removing Irrelevant Columns : {ipl_df.shape}')\n","ipl_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"SdQw16lSBTk2","executionInfo":{"status":"ok","timestamp":1731174270848,"user_tz":-330,"elapsed":483,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"20ece676-6ad5-4839-91da-ff69af2dc3d1"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Before Removing Irrelevant Columns : (67415, 15)\n","After Removing Irrelevant Columns : (67415, 8)\n"]},{"output_type":"execute_result","data":{"text/plain":["                bat_team                    bowl_team  runs  wickets  overs  \\\n","0  Kolkata Knight Riders  Royal Challengers Bangalore   1.0      0.0    0.1   \n","1  Kolkata Knight Riders  Royal Challengers Bangalore   1.0      0.0    0.2   \n","2  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.2   \n","3  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.3   \n","4  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.4   \n","\n","   runs_last_5  wickets_last_5  total  \n","0          1.0             0.0  222.0  \n","1          1.0             0.0  222.0  \n","2          2.0             0.0  222.0  \n","3          2.0             0.0  222.0  \n","4          2.0             0.0  222.0  "],"text/html":["\n","  <div id=\"df-d2336dbb-8e98-42af-9836-a39db87e133f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bat_team</th>\n","      <th>bowl_team</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2336dbb-8e98-42af-9836-a39db87e133f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d2336dbb-8e98-42af-9836-a39db87e133f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d2336dbb-8e98-42af-9836-a39db87e133f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-072f09f4-a76d-416f-8972-6695742c6697\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-072f09f4-a76d-416f-8972-6695742c6697')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-072f09f4-a76d-416f-8972-6695742c6697 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ipl_df","summary":"{\n  \"name\": \"ipl_df\",\n  \"rows\": 67415,\n  \"fields\": [\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Rising Pune Supergiants\",\n          \"Pune Warriors\",\n          \"Kolkata Knight Riders\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Rising Pune Supergiants\",\n          \"Kochi Tuskers Kerala\",\n          \"Royal Challengers Bangalore\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48.55125490448061,\n        \"min\": 0.0,\n        \"max\": 263.0,\n        \"num_unique_values\": 252,\n        \"samples\": [\n          106.0,\n          21.0,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.00782542385316,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5.0,\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.773211506848342,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.929492337354565,\n        \"min\": 0.0,\n        \"max\": 113.0,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          37.0,\n          18.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0497255129481544,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          5.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.235830626252856,\n        \"min\": 67.0,\n        \"max\": 263.0,\n        \"num_unique_values\": 134,\n        \"samples\": [\n          113.0,\n          170.0,\n          193.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Define Consistent Teams\n","const_teams = ['Kolkata Knight Riders', 'Chennai Super Kings', 'Rajasthan Royals',\n","              'Mumbai Indians', 'Kings XI Punjab', 'Royal Challengers Bangalore',\n","              'Delhi Daredevils', 'Sunrisers Hyderabad']"],"metadata":{"id":"4TxPszj7BTnL","executionInfo":{"status":"ok","timestamp":1731174274708,"user_tz":-330,"elapsed":436,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Remove First 5 Overs of every match\n","print(f'Before Removing Inconsistent Teams : {ipl_df.shape}')\n","ipl_df = ipl_df[(ipl_df['bat_team'].isin(const_teams)) & (ipl_df['bowl_team'].isin(const_teams))]\n","print(f'After Removing Irrelevant Columns : {ipl_df.shape}')\n","print(f\"Consistent Teams : \\n{ipl_df['bat_team'].unique()}\")\n","ipl_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"KK2vS-9CBTpL","executionInfo":{"status":"ok","timestamp":1731174279757,"user_tz":-330,"elapsed":474,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"8db512d1-2d01-45cf-8dcb-c9d2f8591e28"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Before Removing Inconsistent Teams : (67415, 8)\n","After Removing Irrelevant Columns : (49264, 8)\n","Consistent Teams : \n","['Kolkata Knight Riders' 'Chennai Super Kings' 'Rajasthan Royals'\n"," 'Mumbai Indians' 'Kings XI Punjab' 'Royal Challengers Bangalore'\n"," 'Delhi Daredevils' 'Sunrisers Hyderabad']\n"]},{"output_type":"execute_result","data":{"text/plain":["                bat_team                    bowl_team  runs  wickets  overs  \\\n","0  Kolkata Knight Riders  Royal Challengers Bangalore   1.0      0.0    0.1   \n","1  Kolkata Knight Riders  Royal Challengers Bangalore   1.0      0.0    0.2   \n","2  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.2   \n","3  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.3   \n","4  Kolkata Knight Riders  Royal Challengers Bangalore   2.0      0.0    0.4   \n","\n","   runs_last_5  wickets_last_5  total  \n","0          1.0             0.0  222.0  \n","1          1.0             0.0  222.0  \n","2          2.0             0.0  222.0  \n","3          2.0             0.0  222.0  \n","4          2.0             0.0  222.0  "],"text/html":["\n","  <div id=\"df-ae5707f4-cd6c-4f28-9b11-c27fe8bb58b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bat_team</th>\n","      <th>bowl_team</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Kolkata Knight Riders</td>\n","      <td>Royal Challengers Bangalore</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae5707f4-cd6c-4f28-9b11-c27fe8bb58b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae5707f4-cd6c-4f28-9b11-c27fe8bb58b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae5707f4-cd6c-4f28-9b11-c27fe8bb58b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-13ca8c71-fcd7-4c8e-9f9a-bae8476b41d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13ca8c71-fcd7-4c8e-9f9a-bae8476b41d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-13ca8c71-fcd7-4c8e-9f9a-bae8476b41d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ipl_df","summary":"{\n  \"name\": \"ipl_df\",\n  \"rows\": 49264,\n  \"fields\": [\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Chennai Super Kings\",\n          \"Royal Challengers Bangalore\",\n          \"Kolkata Knight Riders\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Kings XI Punjab\",\n          \"Chennai Super Kings\",\n          \"Royal Challengers Bangalore\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.07507562906153,\n        \"min\": 0.0,\n        \"max\": 246.0,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          66.0,\n          21.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.011822538247009,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5.0,\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.774644314569438,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.058351042366226,\n        \"min\": 0.0,\n        \"max\": 94.0,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          67.0,\n          45.0,\n          42.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0533470171811996,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          5.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.87139531900815,\n        \"min\": 67.0,\n        \"max\": 246.0,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          200.0,\n          187.0,\n          199.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#Data Preprocessing and Encoding\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n","le = LabelEncoder()\n","for col in ['bat_team', 'bowl_team']:\n","  ipl_df[col] = le.fit_transform(ipl_df[col])\n","ipl_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"tGopM7qJBTra","executionInfo":{"status":"ok","timestamp":1731174283839,"user_tz":-330,"elapsed":750,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"dbec0644-9402-4109-cdb3-683ec984ca51"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   bat_team  bowl_team  runs  wickets  overs  runs_last_5  wickets_last_5  \\\n","0         3          6   1.0      0.0    0.1          1.0             0.0   \n","1         3          6   1.0      0.0    0.2          1.0             0.0   \n","2         3          6   2.0      0.0    0.2          2.0             0.0   \n","3         3          6   2.0      0.0    0.3          2.0             0.0   \n","4         3          6   2.0      0.0    0.4          2.0             0.0   \n","\n","   total  \n","0  222.0  \n","1  222.0  \n","2  222.0  \n","3  222.0  \n","4  222.0  "],"text/html":["\n","  <div id=\"df-8b7da718-09dd-4611-a772-562c9e58227e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bat_team</th>\n","      <th>bowl_team</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b7da718-09dd-4611-a772-562c9e58227e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b7da718-09dd-4611-a772-562c9e58227e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b7da718-09dd-4611-a772-562c9e58227e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f47832ee-5a61-432d-9e5d-710e6f201960\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f47832ee-5a61-432d-9e5d-710e6f201960')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f47832ee-5a61-432d-9e5d-710e6f201960 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ipl_df","summary":"{\n  \"name\": \"ipl_df\",\n  \"rows\": 49264,\n  \"fields\": [\n    {\n      \"column\": \"bat_team\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0,\n          6,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bowl_team\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2,\n          0,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.07507562906153,\n        \"min\": 0.0,\n        \"max\": 246.0,\n        \"num_unique_values\": 239,\n        \"samples\": [\n          66.0,\n          21.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.011822538247009,\n        \"min\": 0.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5.0,\n          0.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"overs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.774644314569438,\n        \"min\": 0.0,\n        \"max\": 19.6,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.6,\n          11.1,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"runs_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.058351042366226,\n        \"min\": 0.0,\n        \"max\": 94.0,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          67.0,\n          45.0,\n          42.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wickets_last_5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0533470171811996,\n        \"min\": 0.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          5.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.87139531900815,\n        \"min\": 67.0,\n        \"max\": 246.0,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          200.0,\n          187.0,\n          199.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["#Performing One Hot Encoding and Column Transformation\n","from sklearn.compose import ColumnTransformer\n","columnTransformer = ColumnTransformer([('encoder',\n","                                        OneHotEncoder(),\n","                                        [0, 1])],\n","                                      remainder='passthrough')"],"metadata":{"id":"MCIUmpIwBTtL","executionInfo":{"status":"ok","timestamp":1731174287448,"user_tz":-330,"elapsed":415,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["ipl_df = npv.array(columnTransformer.fit_transform(ipl_df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"Z-dv-FDwBTv1","executionInfo":{"status":"error","timestamp":1731174300656,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"e7f710b1-b88d-463d-fe9c-13d81e95e645"},"execution_count":17,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'npm' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-f0f6e1ee71a5>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mipl_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnpm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumnTransformer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mipl_df\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'npm' is not defined"]}]},{"cell_type":"code","source":["cols = ['batting_team_Chennai Super Kings', 'batting_team_Delhi Daredevils', 'batting_team_Kings XI Punjab',\n","              'batting_team_Kolkata Knight Riders', 'batting_team_Mumbai Indians', 'batting_team_Rajasthan Royals',\n","              'batting_team_Royal Challengers Bangalore', 'batting_team_Sunrisers Hyderabad',\n","              'bowling_team_Chennai Super Kings', 'bowling_team_Delhi Daredevils', 'bowling_team_Kings XI Punjab',\n","              'bowling_team_Kolkata Knight Riders', 'bowling_team_Mumbai Indians', 'bowling_team_Rajasthan Royals',\n","              'bowling_team_Royal Challengers Bangalore', 'bowling_team_Sunrisers Hyderabad', 'runs', 'wickets', 'overs',\n","       'runs_last_5', 'wickets_last_5', 'total']\n","df = pd.DataFrame(ipl_df, columns=cols)"],"metadata":{"id":"Hs4J6r6LBTyD","executionInfo":{"status":"ok","timestamp":1731174309783,"user_tz":-330,"elapsed":447,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Encoded Data\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":290},"id":"kI2x9bXaBT01","executionInfo":{"status":"ok","timestamp":1731174326748,"user_tz":-330,"elapsed":469,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"8d736103-cfae-439f-a81f-cee54b2272af"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   batting_team_Chennai Super Kings  batting_team_Delhi Daredevils  \\\n","0                               NaN                            NaN   \n","1                               NaN                            NaN   \n","2                               NaN                            NaN   \n","3                               NaN                            NaN   \n","4                               NaN                            NaN   \n","\n","   batting_team_Kings XI Punjab  batting_team_Kolkata Knight Riders  \\\n","0                           NaN                                 NaN   \n","1                           NaN                                 NaN   \n","2                           NaN                                 NaN   \n","3                           NaN                                 NaN   \n","4                           NaN                                 NaN   \n","\n","   batting_team_Mumbai Indians  batting_team_Rajasthan Royals  \\\n","0                          NaN                            NaN   \n","1                          NaN                            NaN   \n","2                          NaN                            NaN   \n","3                          NaN                            NaN   \n","4                          NaN                            NaN   \n","\n","   batting_team_Royal Challengers Bangalore  batting_team_Sunrisers Hyderabad  \\\n","0                                       NaN                               NaN   \n","1                                       NaN                               NaN   \n","2                                       NaN                               NaN   \n","3                                       NaN                               NaN   \n","4                                       NaN                               NaN   \n","\n","   bowling_team_Chennai Super Kings  bowling_team_Delhi Daredevils  ...  \\\n","0                               NaN                            NaN  ...   \n","1                               NaN                            NaN  ...   \n","2                               NaN                            NaN  ...   \n","3                               NaN                            NaN  ...   \n","4                               NaN                            NaN  ...   \n","\n","   bowling_team_Mumbai Indians  bowling_team_Rajasthan Royals  \\\n","0                          NaN                            NaN   \n","1                          NaN                            NaN   \n","2                          NaN                            NaN   \n","3                          NaN                            NaN   \n","4                          NaN                            NaN   \n","\n","   bowling_team_Royal Challengers Bangalore  bowling_team_Sunrisers Hyderabad  \\\n","0                                       NaN                               NaN   \n","1                                       NaN                               NaN   \n","2                                       NaN                               NaN   \n","3                                       NaN                               NaN   \n","4                                       NaN                               NaN   \n","\n","   runs  wickets  overs  runs_last_5  wickets_last_5  total  \n","0   1.0      0.0    0.1          1.0             0.0  222.0  \n","1   1.0      0.0    0.2          1.0             0.0  222.0  \n","2   2.0      0.0    0.2          2.0             0.0  222.0  \n","3   2.0      0.0    0.3          2.0             0.0  222.0  \n","4   2.0      0.0    0.4          2.0             0.0  222.0  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-76aa9a1a-90a3-49c8-bbfe-e4880c3bccf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>batting_team_Chennai Super Kings</th>\n","      <th>batting_team_Delhi Daredevils</th>\n","      <th>batting_team_Kings XI Punjab</th>\n","      <th>batting_team_Kolkata Knight Riders</th>\n","      <th>batting_team_Mumbai Indians</th>\n","      <th>batting_team_Rajasthan Royals</th>\n","      <th>batting_team_Royal Challengers Bangalore</th>\n","      <th>batting_team_Sunrisers Hyderabad</th>\n","      <th>bowling_team_Chennai Super Kings</th>\n","      <th>bowling_team_Delhi Daredevils</th>\n","      <th>...</th>\n","      <th>bowling_team_Mumbai Indians</th>\n","      <th>bowling_team_Rajasthan Royals</th>\n","      <th>bowling_team_Royal Challengers Bangalore</th>\n","      <th>bowling_team_Sunrisers Hyderabad</th>\n","      <th>runs</th>\n","      <th>wickets</th>\n","      <th>overs</th>\n","      <th>runs_last_5</th>\n","      <th>wickets_last_5</th>\n","      <th>total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.3</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.4</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>222.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76aa9a1a-90a3-49c8-bbfe-e4880c3bccf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76aa9a1a-90a3-49c8-bbfe-e4880c3bccf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76aa9a1a-90a3-49c8-bbfe-e4880c3bccf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c79de53c-598b-4934-a18f-ee02fffa7d64\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c79de53c-598b-4934-a18f-ee02fffa7d64')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c79de53c-598b-4934-a18f-ee02fffa7d64 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["train_features = df.drop(['total'], axis=1)\n","train_labels = df['total']"],"metadata":{"id":"nbsVGzdeBT4b","executionInfo":{"status":"ok","timestamp":1731174344177,"user_tz":-330,"elapsed":427,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","train_features, test_features, train_labels, test_labels = train_test_split(features, labels, test_size=0.20, shuffle=True)\n","print(f\"Training Set : {train_features.shape}\\nTesting Set : {test_features.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"QIYbDSEWCDKH","executionInfo":{"status":"error","timestamp":1731174372220,"user_tz":-330,"elapsed":425,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"87502b42-0eb9-4be7-8b57-042c374079b7"},"execution_count":22,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'features' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-9f7dba9209a7>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtrain_features\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_features\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_labels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Training Set : {train_features.shape}\\nTesting Set : {test_features.shape}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'features' is not defined"]}]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeRegressor    #1. Decision Tree Regressor\n","tree = DecisionTreeRegressor()\n","# Train Model\n","tree.fit(train_features, train_labels)\n","\n","# Evaluate Model\n","train_score_tree = str(tree.score(train_features, train_labels) * 100)\n","test_score_tree = str(tree.score(test_features, test_labels) * 100)\n","print(f'Train Score : {train_score_tree[:5]}%\\nTest Score : {test_score_tree[:5]}%')\n","models[\"tree\"] = test_score_tree\n","\n","from sklearn.metrics import mean_absolute_error as mae, mean_squared_error as mse\n","print(\"---- Decision Tree Regressor - Model Evaluation ----\")\n","print(\"Mean Absolute Error (MAE): {}\".format(mae(test_labels, tree.predict(test_features))))\n","print(\"Mean Squared Error (MSE): {}\".format(mse(test_labels, tree.predict(test_features))))\n","print(\"Root Mean Squared Error (RMSE): {}\".format(np.sqrt(mse(test_labels, tree.predict(test_features)))))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"fyTa-4HFCDMk","executionInfo":{"status":"error","timestamp":1731174423397,"user_tz":-330,"elapsed":879,"user":{"displayName":"Sri Charan Varala","userId":"18123505000723620513"}},"outputId":"765234f6-e445-4e63-9616-a89845a178b6"},"execution_count":23,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'test_features' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-d732d7dfeb5a>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Evaluate Model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mtrain_score_tree\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_features\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_labels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mtest_score_tree\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_features\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_labels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'Train Score : {train_score_tree[:5]}%\\nTest Score : {test_score_tree[:5]}%'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mmodels\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"tree\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_score_tree\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'test_features' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"SeyBT_uXCDO5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"KTO_j5tVCDRN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_E1DR7e0CDTj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"i21WcbpWCDXI"},"execution_count":null,"outputs":[]}]}